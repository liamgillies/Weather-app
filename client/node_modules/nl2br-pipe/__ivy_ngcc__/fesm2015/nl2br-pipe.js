import { Pipe, SecurityContext, VERSION, NgModule } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
class Nl2BrPipe {
    /**
     * @param {?} sanitizer
     */
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
    }
    /**
     * @param {?} value
     * @param {?=} sanitizeBeforehand
     * @return {?}
     */
    transform(value, sanitizeBeforehand) {
        if (typeof value !== 'string') {
            return value;
        }
        /** @type {?} */
        let result;
        /** @type {?} */
        const textParsed = value.replace(/(?:\r\n|\r|\n)/g, '<br />');
        if (!VERSION || VERSION.major === '2') {
            result = this.sanitizer.bypassSecurityTrustHtml(textParsed);
        }
        else if (sanitizeBeforehand) {
            result = this.sanitizer.sanitize(SecurityContext.HTML, textParsed);
        }
        else {
            result = textParsed;
        }
        return result;
    }
}
Nl2BrPipe.ɵfac = function Nl2BrPipe_Factory(t) { return new (t || Nl2BrPipe)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer)); };
Nl2BrPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "nl2br", type: Nl2BrPipe, pure: true });
/** @nocollapse */
Nl2BrPipe.ctorParameters = () => [
    { type: DomSanitizer }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Nl2BrPipe, [{
        type: Pipe,
        args: [{
                name: 'nl2br'
            }]
    }], function () { return [{ type: DomSanitizer }]; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class Nl2BrPipeModule {
}
Nl2BrPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Nl2BrPipeModule });
Nl2BrPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function Nl2BrPipeModule_Factory(t) { return new (t || Nl2BrPipeModule)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Nl2BrPipeModule, { declarations: [Nl2BrPipe], exports: [Nl2BrPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Nl2BrPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [Nl2BrPipe],
                imports: [],
                exports: [Nl2BrPipe]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { Nl2BrPipeModule, Nl2BrPipe };

//# sourceMappingURL=nl2br-pipe.js.map