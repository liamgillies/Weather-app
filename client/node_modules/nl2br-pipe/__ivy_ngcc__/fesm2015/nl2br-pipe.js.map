{"version":3,"file":"nl2br-pipe.js","sources":["nl2br-pipe/lib/nl2br.pipe.ts","nl2br-pipe/lib/nl2br.module.ts"],"names":[],"mappings":";;;;;;;;AAAA,MAMa,SAAS;AAAG;AAAQ;AAEvB;AAAQ,IAAhB,YAAoB,SAAuB;AAC7C,QADsB,cAAS,GAAT,SAAS,CAAc;AAAC,KAC3C;AACH;AACO;AAAwB;AAC7B;AAAmB;AAAQ,IAD3B,SAAS,CAAC,KAAa,EAAE,kBAA4B;AAAI,QACvD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACnC,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK;AACL;AACI,YADI,MAAW;AACnB;AAAyB,cAAf,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE,QAAQ,CAAC;AACjE,QACI,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,KAAK,GAAG,EAAE;AAC3C,YAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;AAClE,SAAK;AAAC,aAAK,IAAI,kBAAkB,EAAE;AACnC,YAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACzE,SAAK;AAAC,aAAK;AACX,YAAM,MAAM,GAAG,UAAU,CAAC;AAC1B,SAAK;AACL,QACI,OAAO,MAAM,CAAC;AAClB,KAAG;AACH;qCAzBC,IAAI,SAAC,kBACJ,IAAI,EAAE,OAAO,cACd;sFACI;AAAC;AAAmB;AAEhB,YAPA,YAAY;AAAG;;;;;;sEAAE;AAAC;AAAC;AAAI;AAEzB;AAKuC;ACR9C,MASa,eAAe;AAAG;2CAN9B,QAAQ,SAAC;GACR,YAAY,EAAE,CAAC,SAAS,CAAC,kBACzB,OAAO,EAAE,EACR,kBACD,OAAO,EAAE,CAAC,SAAS,CAAC,cACrB;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACC;AAAqH;AAAI;AAAC;AAAI;AAAkC;AAAqxBA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAJA,AAAA,ACDA,AASA,AAAA,AANA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA","sourcesContent":["import { Pipe, PipeTransform, SecurityContext, VERSION } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'nl2br'\n})\nexport class Nl2BrPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(value: string, sanitizeBeforehand?: boolean): string {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    let result: any;\n    const textParsed = value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n\n    if (!VERSION || VERSION.major === '2') {\n      result = this.sanitizer.bypassSecurityTrustHtml(textParsed);\n    } else if (sanitizeBeforehand) {\n      result = this.sanitizer.sanitize(SecurityContext.HTML, textParsed);\n    } else {\n      result = textParsed;\n    }\n\n    return result;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Nl2BrPipe } from './nl2br.pipe';\n\n@NgModule({\n  declarations: [Nl2BrPipe],\n  imports: [\n  ],\n  exports: [Nl2BrPipe]\n})\nexport class Nl2BrPipeModule { }\n"]}